-- 1. Total number of pizzas ordered
SELECT COUNT(pizza_id) pizza_count
FROM customer_orders

-- 2.Total number of unique orders
SELECT COUNT(distinct order_id) order_count
FROM customer_orders

-- 3. Number of successful deliveries
UPDATE runner_orders
SET cancellation = ''
WHERE cancellation in (null,'null')

SELECT runner_id ,count(*) succesful_orders
FROM runner_orders
WHERE cancellation is null
GROUP BY runner_id

-- 4. Total number of vegetarian and meatlovers ordered.
ALTER TABLE pizza_names
ALTER COLUMN pizza_name varchar(10)

SELECT pizza_name, COUNT(c.order_id) pizza_count
FROM customer_orders c JOIN pizza_names n
ON c.pizza_id = n.pizza_id JOIN runner_orders r
ON c.order_id = r.order_id
WHERE cancellation IS NULL
GROUP BY pizza_name

-- 5 Vegetarian and Meatlovers orderd by each customer
SELECT customer_id, pizza_name, COUNT(order_id) pizza_count
FROM customer_orders c JOIN pizza_names n ON c.pizza_id = n.pizza_id
GROUP BY customer_id, pizza_name

-- 6. Highest number of pizzas delivered in a single order
SELECT TOP 1 c.order_id, count(c.order_id) pizza_count
FROM customer_orders c JOIN runner_orders r 
ON c.order_id = r.order_id
WHERE cancellation IS NULL
GROUP BY c.order_id
HAVING COUNT(c.order_id) > 1
ORDER BY pizza_count DESC

-- 7. Pizzas kept the same or with added or removed toppings
SELECT customer_id,
SUM(
CASE
	WHEN extras IS NOT NULL OR exclusions IS NOT NULL then 1
ELSE 0
END) at_least_1_change,
SUM(
CASE
	WHEN extras IS NULL AND exclusions IS NULL then 1
ELSE 0
END) no_changes
FROM customer_orders c JOIN runner_orders r
ON c.order_id = r.order_id
WHERE cancellation IS NULL
GROUP BY customer_id

-- 8. Number of pizzas ordered with extra and excluded toppings
SELECT COUNT(*) order_count
FROM customer_orders c JOIN runner_orders r
ON c.order_id = r.order_id
WHERE extras IS NOT NULL and exclusions IS NOT NULL and cancellation IS NULL

-- 9. Orders per hour
SELECT COUNT(*) order_count, DATEPART(HOUR FROM order_time) hour
FROM customer_orders
GROUP BY DATEPART(HOUR FROM order_time) 
ORDER BY hour

-- 10. Orders per day
SELECT FORMAT(DATEADD(DAY, 2, order_time), 'dddd') day_of_week, COUNT(*) order_count
FROM customer_orders
GROUP BY FORMAT(DATEADD(DAY, 2, order_time), 'dddd')
ORDER BY day_of_week DESC
